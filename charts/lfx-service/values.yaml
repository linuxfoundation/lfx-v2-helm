
# Copyright The Linux Foundation and each contributor to LFX.
# SPDX-License-Identifier: MIT
---
# Global configuration that can be overridden per service
global:
  # Domain for routing
  domain: ""
  # AWS region for external secrets (leave blank for local installs)
  awsRegion: ""

# Application name - should be set for each service
nameOverride: ""
fullnameOverride: ""

# Common labels to apply to all resources
commonLabels: {}

# Common annotations to apply to all resources
commonAnnotations: {}

# Image configuration
image:
  repository: ""  # Required - set per service
  tag: ""         # Defaults to Chart.appVersion if not set
  pullPolicy: IfNotPresent

# Deployment configuration
deployment:
  replicaCount: 1
  port: 8080

  environment: {}

  # Security context for the container
  securityContext:
    allowPrivilegeEscalation: false

  # Resource limits and requests
  resources: {}

  # Node selector, tolerations, and affinity
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Health check configuration
  healthChecks:
    enabled: true
    livenessProbe:
      httpGet:
        path: /livez
        port: web
      failureThreshold: 3
      periodSeconds: 15
    readinessProbe:
      httpGet:
        path: /readyz
        port: web
      failureThreshold: 1
      periodSeconds: 10
    startupProbe:
      httpGet:
        path: /readyz
        port: web
      failureThreshold: 30
      periodSeconds: 1

  # Deployment-specific labels and annotations
  annotations: {}
  labels: {}

# Service configuration
service:
  enabled: true
  type: ClusterIP
  port: 8080

  # Service-specific labels and annotations
  annotations: {}
  labels: {}

# ServiceAccount configuration
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true

  # ServiceAccount-specific labels and annotations
  annotations: {}
  labels: {}


# HTTP routing configuration using Gateway API
httpRoute:
  enabled: false
  gateway:
    name: lfx-platform-gateway
    namespace: lfx

  # Hostnames for the route (defaults to lfx-api.{global.domain})
  hostnames: []
  matches: []
  filters: []

  # httpRoute-specific labels and annotations
  annotations: {}
  labels: {}

# Heimdall authentication middleware
heimdall:
  enabled: false
  url: http://lfx-platform-heimdall.lfx.svc.cluster.local:4456
  # Whether to create the middleware resources
  createMiddleware: true
  # Whether to use body forwarding middleware
  forwardBody: true

  # Heimdall-specific labels and annotations
  annotations: {}
  labels: {}

# Heimdall RuleSet for authentication rules
ruleSet:
  enabled: false
  # JWT audience for the service
  audience: ""
  # Whether to use OIDC contextualizer
  useOidcContextualizer: true
  # Whether OpenFGA authorization is enabled
  openfgaEnabled: true

  rules: []

  # RuleSet-specific labels and annotations
  annotations: {}
  labels: {}

# NATS KeyValue buckets
nats:
  kvBuckets: []

  # NATS-specific labels and annotations
  annotations: {}
  labels: {}


# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

  # PodDisruptionBudget-specific labels and annotations
  annotations: {}
  labels: {}

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

  # HPA-specific labels and annotations
  annotations: {}
  labels: {}

# External Secrets Operator configuration
externalSecretsOperator:
  enabled: false

  # SecretStore configuration
  secretStore:
    name: ""  # Defaults to "{release-name}-secret-store"

    # SecretStore-specific labels and annotations
    annotations: {}
    labels: {}

  # ExternalSecret configuration
  externalSecret:
    name: ""  # Defaults to "{release-name}-external-secret"
    refreshInterval: "10m"

    # ExternalSecret-specific labels and annotations
    annotations: {}
    labels: {}

    # Target secret configuration
    target:
      name: ""  # Defaults to "{release-name}-secrets"
      creationPolicy: "Owner"
      deletionPolicy: "Retain"
      template: {}

    # Secret data configuration - use either data OR dataFrom, not both
    # If both are empty, defaults to tag-based discovery
    # Individual secret mappings
    data: []
    # Bulk secret import
    dataFrom: []
